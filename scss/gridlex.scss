
/* ==========================================================================
    GRIDLEX
    Just a Flexbox Grid System
========================================================================== */
//************************
//    VARIABLES
//************************
$gutterXL:     2.777777rem;   // 50px
$gutterL:      1.666666rem;   // 30px
$gutterM:      1.388888rem;   // 25px
$gutterM:      5rem;   // 25px
$gutterSM:     1.111111rem;   // 20px
$gutterS:      0.555555rem;   // 10px

$gl-gridName:   grid !default;
$gl-colName:    col !default;
$gl-gutter:     $gutterM !default;    // Total
$gl-col-bottom: $gl-gutter !default;

$gl-xs:         "screen and (max-width: 35.5em)" !default;                       // up to 568px
$gl-xs-plus:    "screen and (min-width: 35.5em)" !default;                       // up to 568px
$gl-sm:         "screen and (max-width: 48em)" !default;                         // max 768px
$gl-xs-to-sm:   "screen and (max-width: 48em) and (min-width: 35.5em)" !default; // max 768px
$gl-sm-plus:    "screen and (min-width: 48em)" !default;                         // max 768px
$gl-md:         "screen and (max-width: 64em)" !default;                         // max 1024px
$gl-xs-to-md:   "screen and (min-width: 35.5em) and (max-width: 64em)" !default; // max 1024px
$gl-sm-to-md:   "screen and (max-width: 64em) and (min-width: 48em)" !default;   // max 1024px
$gl-md-plus:    "screen and (min-width: 64em)" !default;                         // max 1024px
$gl-lg:         "screen and (max-width: 80em)" !default;                         // max 1280px
$gl-md-to-lg:   "screen and (max-width: 80em) and (min-width: 64em)" !default;   // max 1280px
$gl-lg-plus:    "screen and (min-width: 80em)" !default;                         // max 1280px






$glp_col-1: (100%/14);
$glp_col-2: ($glp_col-1*2);
$glp_col-3: ($glp_col-1*3);
$glp_col-4: ($glp_col-1*4);
$glp_col-5: ($glp_col-1*5);
$glp_col-6: ($glp_col-1*6);
$glp_col-7: ($glp_col-1*7);
$glp_col-8: ($glp_col-1*8);
$glp_col-9: ($glp_col-1*9);
$glp_col-10: ($glp_col-1*10);
$glp_col-11: ($glp_col-1*11);
$glp_col-12: ($glp_col-1*12);
$glp_col-13: ($glp_col-1*13);
$glp_col-14: 100%;

$glp_col-3-14: (100%/3);
$glp_col-4-14: (100%/4);
$glp_col-5-14: (100%/5);
$glp_col-6-14: (100%/6);
$glp_col-7-14: (100%/7);
$glp_col-8-14: (100%/8);
$glp_col-9-14: (100%/9);
$glp_col-10-14: (100%/10);
$glp_col-11-14: (100%/11);
$glp_col-12-14: (100%/12);
$glp_col-13-14: (100%/13);
$glp_col-third: (100%/3);
$glp_col-quarter: (100%/4);
$glp_col-fifth: (100%/5);
$glp_col-sixth: (100%/6);
$glp_col-seventh: (100%/7);
$glp_col-eighth: (100%/8);
$glp_col-ninth: (100%/9);
$glp_col-tenth: (100%/10);
$glp_col-eleventh: (100%/11);
$glp_col-twelth: (100%/12);
$glp_col-thirteenth: (100%/13);


$glp_col-4-of-14: ((100%/14)*4);
$glp_col-5-of-14: ((100%/14)*5);
$glp_col-6-of-14: ((100%/14)*6);
$glp_col-7-of-14: ((100%/14)*7);
$glp_col-8-of-14: ((100%/14)*8);
$glp_col-9-of-14: ((100%/14)*9);
$glp_col-10-of-14: ((100%/14)*10);
$glp_col-11-of-14: ((100%/14)*11);
$glp_col-12-of-14: ((100%/14)*12);
$glp_col-13-of-14: ((100%/14)*13);






// Function to generate the grid by number
@mixin makeGridByNumber($grid)
{
  [class*="#{$grid}-1"] > .#{$gl-colName}, [class*="#{$grid}-1"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-14; max-width: $glp_col-14; }
  [class*="#{$grid}-2"] > .#{$gl-colName}, [class*="#{$grid}-2"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-7; max-width: $glp_col-7; }
  [class*="#{$grid}-3"] > .#{$gl-colName}, [class*="#{$grid}-3"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-3-14; max-width: $glp_col-3-14; }
  [class*="#{$grid}-4"] > .#{$gl-colName}, [class*="#{$grid}-4"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-4-14; max-width: $glp_col-4-14; }
  [class*="#{$grid}-5"] > .#{$gl-colName}, [class*="#{$grid}-5"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-5-14; max-width: $glp_col-5-14; }
  [class*="#{$grid}-6"] > .#{$gl-colName}, [class*="#{$grid}-6"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-6-14; max-width: $glp_col-6-14; }
  [class*="#{$grid}-7"] > .#{$gl-colName}, [class*="#{$grid}-7"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-2; max-width: $glp_col-2; }
  [class*="#{$grid}-8"] > .#{$gl-colName}, [class*="#{$grid}-8"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-8-14; max-width: $glp_col-8-14; }
  [class*="#{$grid}-9"] > .#{$gl-colName}, [class*="#{$grid}-9"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-9-14; max-width: $glp_col-9-14; }
  [class*="#{$grid}-10"] > .#{$gl-colName}, [class*="#{$grid}-10"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-10-14; max-width: $glp_col-10-14; }
  [class*="#{$grid}-11"] > .#{$gl-colName}, [class*="#{$grid}-11"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-11-14; max-width: $glp_col-11-14; }
  [class*="#{$grid}-12"] > .#{$gl-colName}, [class*="#{$grid}-12"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-12-14; max-width: $glp_col-12-14; }
  [class*="#{$grid}-13"] > .#{$gl-colName}, [class*="#{$grid}-13"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-13-14; max-width: $glp_col-13-14; }
  [class*="#{$grid}-14"] > .#{$gl-colName}, [class*="#{$grid}-14"] > [class*='#{$gl-colName}-']{ flex-basis: $glp_col-1; max-width: $glp_col-1; }
}





// Function to generate the grid by columns
@mixin makeCol($col)
{
    [class*='#{$gl-gridName}'] {
        > [class*="#{$col}-1"] { flex-basis: $glp_col-1; max-width: $glp_col-1; }
        > [class*="#{$col}-2"] { flex-basis: $glp_col-2; max-width: $glp_col-2; }
        > [class*="#{$col}-3"] { flex-basis: $glp_col-3; max-width: $glp_col-3; }
        > [class*="#{$col}-4"] { flex-basis: $glp_col-4; max-width: $glp_col-4;}
        > [class*="#{$col}-5"] { flex-basis: $glp_col-5; max-width: $glp_col-5; }
        > [class*="#{$col}-6"] { flex-basis: $glp_col-6; max-width: $glp_col-6; }
        > [class*="#{$col}-7"] { flex-basis: $glp_col-7; max-width: $glp_col-7; }
        > [class*="#{$col}-8"] { flex-basis: $glp_col-8; max-width: $glp_col-8; }
        > [class*="#{$col}-9"] { flex-basis: $glp_col-9; max-width: $glp_col-9; }
        > [class*="#{$col}-10"] { flex-basis: $glp_col-10; max-width: $glp_col-10; }
        > [class*="#{$col}-11"] { flex-basis: $glp_col-11; max-width: $glp_col-11; }
        > [class*="#{$col}-12"] { flex-basis: $glp_col-12; max-width: $glp_col-12; }
        > [class*="#{$col}-13"] { flex-basis: $glp_col-13; max-width: $glp_col-13; }
        > [class*="#{$col}-14"] { flex-basis: $glp_col-14; max-width: $glp_col-14; }

        > [class*="#{$col}-third"] { flex-basis: $glp_col-third; max-width: $glp_col-third; }
        > [class*="#{$col}-quarter"] { flex-basis: $glp_col-quarter; max-width: $glp_col-quarter; }
        > [class*="#{$col}-fifth"] { flex-basis: $glp_col-fifth; max-width: $glp_col-fifth; }
        > [class*="#{$col}-sixth"] { flex-basis: $glp_col-sixth; max-width: $glp_col-sixth; }
        > [class*="#{$col}-seventh"] { flex-basis: $glp_col-seventh; max-width: $glp_col-seventh; }
        > [class*="#{$col}-eighth"] { flex-basis: $glp_col-eighth; max-width: $glp_col-eighth; }
        > [class*="#{$col}-ninth"] { flex-basis: $glp_col-ninth; max-width: $glp_col-ninth; }
        > [class*="#{$col}-tenth"] { flex-basis: $glp_col-tenth; max-width: $glp_col-tenth; }
        > [class*="#{$col}-eleventh"] { flex-basis: $glp_col-eleventh; max-width: $glp_col-eleventh; }
        > [class*="#{$col}-twelth"] { flex-basis: $glp_col-twelth; max-width: $glp_col-twelth; }
        > [class*="#{$col}-thirteenth"] { flex-basis: $glp_col-thirteenth; max-width: $glp_col-thirteenth; }

        > [class*="#{$col}-4-of-14"] { flex-basis: $glp_col-4-of-14; max-width: $glp_col-4-of-14; }
        > [class*="#{$col}-5-of-14"] { flex-basis: $glp_col-5-of-14; max-width: $glp_col-5-of-14; }
        > [class*="#{$col}-6-of-14"] { flex-basis: $glp_col-6-of-14; max-width: $glp_col-6-of-14; }
        > [class*="#{$col}-7-of-14"] { flex-basis: $glp_col-7-of-14; max-width: $glp_col-7-of-14; }
        > [class*="#{$col}-8-of-14"] { flex-basis: $glp_col-8-of-14; max-width: $glp_col-8-of-14; }
        > [class*="#{$col}-9-of-14"] { flex-basis: $glp_col-9-of-14; max-width: $glp_col-9-of-14; }
        > [class*="#{$col}-10-of-14"] { flex-basis: $glp_col-10-of-14; max-width: $glp_col-10-of-14; }
        > [class*="#{$col}-11-of-14"] { flex-basis: $glp_col-11-of-14; max-width: $glp_col-11-of-14; }
        > [class*="#{$col}-12-of-14"] { flex-basis: $glp_col-12-of-14; max-width: $glp_col-12-of-14; }
        > [class*="#{$col}-13-of-14"] { flex-basis: $glp_col-13-of-14; max-width: $glp_col-13-of-14; }
    }
}





// Function to generate the offset
@mixin makeOff($off)
{
    [class*="#{$gl-gridName}"]{
        > [data-push-left*="#{$off}-0"]{ margin-left: 0; }
        > [data-push-left*="#{$off}-1"]{ margin-left: $glp_col-1; }
        > [data-push-left*="#{$off}-2"]{ margin-left: $glp_col-2; }
        > [data-push-left*="#{$off}-3"]{ margin-left: $glp_col-3; }
        > [data-push-left*="#{$off}-4"]{ margin-left: $glp_col-4; }
        > [data-push-left*="#{$off}-5"]{ margin-left: $glp_col-5; }
        > [data-push-left*="#{$off}-6"]{ margin-left: $glp_col-6; }
        > [data-push-left*="#{$off}-7"]{ margin-left: $glp_col-7; }
        > [data-push-left*="#{$off}-8"]{ margin-left: $glp_col-8; }
        > [data-push-left*="#{$off}-9"]{ margin-left: $glp_col-9; }
        > [data-push-left*="#{$off}-10"]{ margin-left: $glp_col-10; }
        > [data-push-left*="#{$off}-11"]{ margin-left: $glp_col-11; }
        > [data-push-left*="#{$off}-12"]{ margin-left: $glp_col-12; }
        > [data-push-left*="#{$off}-13"]{ margin-left: $glp_col-13; }

        > [data-push-right*="#{$off}-0"]{ margin-right: 0; }
        > [data-push-right*="#{$off}-1"]{ margin-right: $glp_col-1; }
        > [data-push-right*="#{$off}-2"]{ margin-right: $glp_col-2; }
        > [data-push-right*="#{$off}-3"]{ margin-right: $glp_col-3; }
        > [data-push-right*="#{$off}-4"]{ margin-right: $glp_col-4; }
        > [data-push-right*="#{$off}-5"]{ margin-right: $glp_col-5; }
        > [data-push-right*="#{$off}-6"]{ margin-right: $glp_col-6; }
        > [data-push-right*="#{$off}-7"]{ margin-right: $glp_col-7; }
        > [data-push-right*="#{$off}-8"]{ margin-right: $glp_col-8; }
        > [data-push-right*="#{$off}-9"]{ margin-right: $glp_col-9; }
        > [data-push-right*="#{$off}-10"]{ margin-right: $glp_col-10; }
        > [data-push-right*="#{$off}-11"]{ margin-right: $glp_col-11; }
        > [data-push-right*="#{$off}-12"]{ margin-right: $glp_col-12; }
        > [data-push-right*="#{$off}-13"]{ margin-right: $glp_col-13; }

        > [data-pull-left*="#{$off}-0"]{ margin-left: -0; }
        > [data-pull-left*="#{$off}-1"]{ margin-left: -$glp_col-1; }
        > [data-pull-left*="#{$off}-2"]{ margin-left: -$glp_col-2; }
        > [data-pull-left*="#{$off}-3"]{ margin-left: -$glp_col-3; }
        > [data-pull-left*="#{$off}-4"]{ margin-left: -$glp_col-4; }
        > [data-pull-left*="#{$off}-5"]{ margin-left: -$glp_col-5; }
        > [data-pull-left*="#{$off}-6"]{ margin-left: -$glp_col-6; }
        > [data-pull-left*="#{$off}-7"]{ margin-left: -$glp_col-7; }
        > [data-pull-left*="#{$off}-8"]{ margin-left: -$glp_col-8; }
        > [data-pull-left*="#{$off}-9"]{ margin-left: -$glp_col-9; }
        > [data-pull-left*="#{$off}-10"]{ margin-left: -$glp_col-10; }
        > [data-pull-left*="#{$off}-11"]{ margin-left: -$glp_col-11; }
        > [data-pull-left*="#{$off}-12"]{ margin-left: -$glp_col-12; }
        > [data-pull-left*="#{$off}-13"]{ margin-left: -$glp_col-13; }

        > [data-pull-right*="#{$off}-0"]{ margin-right: -0; }
        > [data-pull-right*="#{$off}-1"]{ margin-right: -$glp_col-1; }
        > [data-pull-right*="#{$off}-2"]{ margin-right: -$glp_col-2; }
        > [data-pull-right*="#{$off}-3"]{ margin-right: -$glp_col-3; }
        > [data-pull-right*="#{$off}-4"]{ margin-right: -$glp_col-4; }
        > [data-pull-right*="#{$off}-5"]{ margin-right: -$glp_col-5; }
        > [data-pull-right*="#{$off}-6"]{ margin-right: -$glp_col-6; }
        > [data-pull-right*="#{$off}-7"]{ margin-right: -$glp_col-7; }
        > [data-pull-right*="#{$off}-8"]{ margin-right: -$glp_col-8; }
        > [data-pull-right*="#{$off}-9"]{ margin-right: -$glp_col-9; }
        > [data-pull-right*="#{$off}-10"]{ margin-right: -$glp_col-10; }
        > [data-pull-right*="#{$off}-11"]{ margin-right: -$glp_col-11; }
        > [data-pull-right*="#{$off}-12"]{ margin-right: -$glp_col-12; }
        > [data-pull-right*="#{$off}-13"]{ margin-right: -$glp_col-13; }
    }
}


[class*="#{$gl-gridName}"]{
  box-sizing: border-box;
  display: flex;
  flex-flow: row wrap;
  margin: 0 (-$gl-gutter/2);
}
.#{$gl-colName},
[class*="#{$gl-colName}-"]{
  box-sizing: border-box;
  flex: 0 0 auto;
  padding: 0 ($gl-gutter/2) $gl-col-bottom;

  &.width_padding-bottom {
    padding-bottom: $gl-col-bottom
  }
}
.#{$gl-colName}{
  flex: 1 1 0%;
}
.#{$gl-gridName}.#{$gl-colName},
.#{$gl-gridName}[class*="#{$gl-colName}-"]{
  margin: 0;
  padding: 0;
}

/************************
    HELPERS SUFFIXES
*************************/
// FOR GRID
[class*="#{$gl-gridName}-"]{
// No spacing between cols : noGutter
  &[class*="-noGutter"]{
    margin: 0;
    > [class*="#{$gl-colName}"]{
      padding: 0;
    }
  }

// No Wrapping
  &[class*="-noWrap"]{
    flex-wrap: nowrap;
  }
// Horizontal alignment
  &[class*="-center"]{
    justify-content: center;
  }
  &[class*="-right"]{
    justify-content: flex-end;
    align-self: flex-end;
    margin-left: auto;
  }
// Vertical alignment
  &[class*="-top"]{
    align-items: flex-start;
  }
  &[class*="-middle"]{
    align-items: center;
  }
  &[class*="-bottom"]{
    align-items: flex-end;
  }

// Orders
  &[class*="-reverse"]{
    flex-direction: row-reverse;
  }
  &[class*="-column"] {
    flex-direction: column;
    > [class*="#{$gl-colName}-"] {
      flex-basis: auto;
    }
  }
  &[class*="-column-reverse"]{
    flex-direction: column-reverse;
  }

// Spaces between and around cols
  &[class*="-spaceBetween"]{
    justify-content: space-between;
  }
  &[class*="-spaceAround"]{
    justify-content: space-around;
  }

// Equal heights columns
  &[class*="-equalHeight"] > [class*="#{$gl-colName}"]{
    display: flex;
    flex-wrap: wrap;
    > *{
      flex: 1 0 100%;
    }
  }
// Removes the padding-bottom
  &[class*="-noBottom"] > [class*="#{$gl-colName}"]{
    padding-bottom: 0;
  }
}

//FOR GRID AND POSITIONINGS
[class*="#{$gl-gridName}_"] {
  @media #{$gl-lg}{
    &[class*="_lg"][class*="-center"] {
      justify-content: center;
    }
    &[class*="_lg"][class*="-middle"] {
      align-items: center;
    }
  }
  @media #{$gl-md}{
    &[class*="_md"][class*="-center"] {
      justify-content: center;
    }
    &[class*="_md"][class*="-middle"] {
      align-items: center;
    }
  }
  @media #{$gl-sm}{
    &[class*="_sm"][class*="-center"] {
      justify-content: center;
    }
    &[class*="_sm"][class*="-middle"] {
      align-items: center;
    }
  }
  @media #{$gl-xs}{
    &[class*="_xs"][class*="-center"] {
      justify-content: center;
    }
    &[class*="_xs"][class*="-middle"] {
      align-items: center;
    }
  }
}

// FOR COL
[class*="#{$gl-colName}-"]{
  &[class*="-top"]{
    align-self: flex-start;
  }
  &[class*="-middle"]{
    align-self: center;
  }
  &[class*="-bottom"]{
    align-self: flex-end;
  }
  &[class*="-first"]{
    order: -1;
  }
  &[class*="-last"]{
    order: 1;
  }
}

/************************
    GRID BY NUMBER
*************************/
@include makeGridByNumber(#{$gl-gridName});

@media #{$gl-lg}{
  @include makeGridByNumber(_lg);
}
@media #{$gl-md}{
  @include makeGridByNumber(_md);
}
@media #{$gl-sm}{
  @include makeGridByNumber(_sm);
}
@media #{$gl-xs}{
  @include makeGridByNumber(_xs);
}

/************************
    COLS SIZES
*************************/
@include makeCol(#{$gl-colName});
@include makeOff(off);

@media #{$gl-lg}{
  @include makeCol(_lg);
  @include makeOff(_lg);
}
@media #{$gl-md}{
  @include makeCol(_md);
  @include makeOff(_md);
}
@media #{$gl-sm}{
  @include makeCol(_sm);
  @include makeOff(_sm);
}
@media #{$gl-xs}{
  @include makeCol(_xs);
  @include makeOff(_xs);
}

/************************
    HIDING COLS
*************************/
[class*="#{$gl-colName}-"]:not([class*="#{$gl-colName}-0"]) {
  display: block;
}
[class*="#{$gl-gridName}"][class*="#{$gl-colName}-"]:not([class*="#{$gl-colName}-0"]) {
  display: flex;
}
[class*="#{$gl-colName}-"][class*="#{$gl-colName}-0"] {
  display: none;
}
@media #{$gl-lg}{
  [class*="#{$gl-gridName}"] {
    > :not([class*="_lg-0"]){
      display: block;
    }
    &:not([class*="_lg-0"]) {
      display: flex;
    }
    >[class*="_lg-0"],
    &[class*="-equalHeight"] > [class*="_lg-0"]{
      display: none;
    }
  }
}
@media #{$gl-md}{
  [class*="#{$gl-gridName}"] {
    > :not([class*="_md-0"]){
      display: block;
    }
    &:not([class*="_md-0"]) {
      display: flex;
    }
    >[class*="_md-0"],
    &[class*="-equalHeight"] > [class*="_md-0"]{
      display: none;
    }
  }
}
@media #{$gl-sm}{
  [class*="#{$gl-gridName}"] {
    > :not([class*="_sm-0"]){
      display: block;
    }
    &:not([class*="_sm-0"]) {
      display: flex;
    }
    >[class*="_sm-0"],
    &[class*="-equalHeight"] > [class*="_sm-0"]{
      display: none;
    }
  }
}
@media #{$gl-xs}{
  [class*="#{$gl-gridName}"] {
    > :not([class*="_xs-0"]){
      display: block;
    }
    &:not([class*="_xs-0"]) {
      display: flex;
    }
    >[class*="_xs-0"],
    &[class*="-equalHeight"] > [class*="_xs-0"]{
      display: none;
    }
  }
}
